@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedGoal = Context.Request.Query["goal"].ToString();
    var selectedStatus = Context.Request.Query["status"].ToString();
    var selectedTime = Context.Request.Query["time"].ToString();
}

<h1 class="headline mb-4" style="color:var(--onejax-navy);">OneJax Strategic Dashboard</h1>

<div class="container mt-4">
    <div class="card p-4"
        style="background-color:var(--onejax-white); box-shadow:0 4px 24px rgba(0,0,0,0.08); border-radius:24px; max-width:2000px;">

        <!-- Tabs for Goals -->
        <ul class="nav nav-tabs mb-4">
            <li class="nav-item">
                <a class="nav-link @(string.IsNullOrEmpty(selectedGoal) ? "active" : "")"
                    href="@Url.Action("Index", new { goal = "" })">All Goals</a>
            </li>
            @foreach (var goal in Model.StrategicGoals)
            {
                <li class="nav-item">
                    <a class="nav-link @(selectedGoal == goal.Name ? "active" : "")"
                        href="@Url.Action("Index", new { goal = goal.Name })">@goal.Name</a>
                </li>
            }
        </ul>

        <!-- Filters row at the top -->
        <form method="get" class="mb-4">
            <div class="d-flex flex-wrap align-items-center gap-3">
                <!-- Status Filter -->
                <select class="form-select" name="status" style="max-width:200px;">
                    <option value="" @(string.IsNullOrEmpty(selectedStatus) ? "selected" : "")>Status: All</option>
                    <option value="Active" @(selectedStatus == "Active" ? "selected" : "")>Active</option>
                    <option value="Completed" @(selectedStatus == "Completed" ? "selected" : "")>Completed</option>
                    <option value="Upcoming" @(selectedStatus == "Upcoming" ? "selected" : "")>Upcoming</option>
                </select>
                <!-- Time Filter -->
                <select class="form-select" name="time" style="max-width:200px;">
                    <option value="" @(string.IsNullOrEmpty(selectedTime) ? "selected" : "")>All Time</option>
                    <option value="Monthly" @(selectedTime == "Monthly" ? "selected" : "")>Monthly</option>
                    <option value="Quarterly" @(selectedTime == "Quarterly" ? "selected" : "")>Quarterly</option>
                    <option value="Yearly" @(selectedTime == "Yearly" ? "selected" : "")>Yearly</option>
                </select>
                <!-- Goal Filter Dropdown -->
                <select class="form-select" name="goal" style="max-width:200px;">
                    <option value="" @(string.IsNullOrEmpty(selectedGoal) ? "selected" : "")>All Goals</option>
                    @foreach (var goal in Model.StrategicGoals)
                    {
                        <h3>@goal.Name</h3>
                        <ul>
                            @foreach (var strategy in goal.Strategies)
                            {
                                <li>@strategy.Name</li>
                            }
                        </ul>
                    }
                </select>
                <button type="submit" class="btn btn-primary ms-2">Filter</button>
                <!-- Download/Export Buttons -->
                <button type="button" class="btn btn-outline-secondary ms-2">Export PDF</button>
                <button type="button" class="btn btn-outline-secondary ms-2">Export Excel</button>
            </div>
        </form>

        <!-- Dashboard grid: Goals > Strategies > Metrics -->
        <div class="row">
            @foreach (var goal in Model.StrategicGoals.Where(g => string.IsNullOrEmpty(selectedGoal) || g.Name == selectedGoal))
            {
                <div class="col-12 mb-4">
                    <div class="card" style="background-color:var(--onejax-blue); border-radius:16px;">
                        <div class="card-body">
                            <h3 style="color:var(--onejax-white);">@goal.Name</h3>
                            @foreach (var strategy in goal.Strategies)
                            {
                                <h5 style="color:var(--onejax-orange);">@strategy.Name</h5>
                                <ul>
                                    @foreach (var metric in strategy.Metrics
                                        .Where(m => (string.IsNullOrEmpty(selectedStatus) || m.Status == selectedStatus)
                                                 && (string.IsNullOrEmpty(selectedTime) || m.TimePeriod == selectedTime)))
                                    {
                                        <li style="color:var(--onejax-white);">
                                            <strong>@metric.Description</strong><br />
                                            Target: @metric.Target<br />
                                            Progress: @metric.Progress<br />
                                            Status: @metric.Status, Time: @metric.TimePeriod
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- Chart and Table Section ... -->
    </div>
</div>